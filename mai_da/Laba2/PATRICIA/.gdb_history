list 
break nPatriciaTrie<T>::bit_get
break nPatriciaTrie<unsigned long long>::bit_get(char*, int) 
start
continue 
p *bit_stream 
p n
s
p n >> 3
p *(bit_stream + (n >> 3)) >> k
p *(bit_stream + (n >> 3))
p *(bit_stream + (n >> 3)) >> k
p *(bit_stream + (n >> 3)) >> 1
p *(bit_stream + (n >> 3)) >> 2
p *(bit_stream + (n >> 3)) >> 3
p *(bit_stream + (n >> 3)) >> 4
p *(bit_stream + (n >> 3)) >> 5
p *(bit_stream + (n >> 3)) >> 6
p *(bit_stream + (n >> 3)) >> 7
p *(bit_stream + (n >> 3)) >> 0
p k

continue 
continue 
p n
s
p k
p *(bit_stream + (n >> 3)) >> k
p ((*(bit_stream + (n >> 3))) >> k) & 0x1
q
break 29
start
continue 
s
display *p
display *t
display *x
s
n
s
p k
p d
p i
n
s
n
s
p x
p t
s
n
continue 
s
p p->bit_index 
p t->bit_index 
s
s
display ((*(bit_stream + (n >> 3))) >> k) & 0x1
display k
display n
s
p k1
p k2
s
n
p (strcmp((char*)k1, (char*)k2) == 0)
s
p k
p t->key
s
display k1[n]
display k2[n]
display n
display d
s
n
s
n
p n << 3
p (n << 3) + d
p bit_get(&k1[n],d)
p bit_get(&k2[n],d)
s
display i
s
n
s
n
Ð¹
q
break nPatriciaTrie<unsigned long long>::key_compare(char*, char*) 
start
continue 
p k1
p k2
s
n
continue 
p !k1 || !k2
p k1 || k2
p k1 || !k2
p !k1 || k2
p !k1 || !k2
p k1
p k2
p if(k1)
p if(!k1)
p if(!k1 || !k2)
p !k1
p k1
set k1 NULL
set k1 = NULL
set k1 = NULL;
set $t = NULL
set $t = k1
p t
p $t
$t = NULL
set $t = NULL
p $t
set *((nPatriciaTrieKey) 0x7fffffffdda0) = NULL
set *((nPatriciaTrieKey) 0x7fffffffdda0) = nullptr
set *((nPatriciaTrieKey) 0x7fffffffdda0) = 0
p !k1
p k1
q
